extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.3",
        import: ["@key", "@shareable"])

directive @external on OBJECT | FIELD_DEFINITION

scalar DateTime

extend type Post @key(fields: "id"){
  id: ID!
  comments: [Comment!]
}

extend type User @key(fields: "id"){
  id: ID!
  comments: [Comment!]
}

type Comment @key(fields: "id"){
  # Example field (placeholder)
  id: ID!
  content: String!
  authorId: String!
  postId: String!
  postOwnerId: String!
  post: Post
  user: User
  likersIds:[String]
  likers: [User]
  createdAt: DateTime
  updatedAt: DateTime

}

input CreateCommentInput {
  # Example field (placeholder)
  content: String!
  authorId: String
  postId: String
  postOwnerId: String!
  postSubscribers: String
  createdAt: DateTime
}

input UpdateCommentInput {
  content: String
  authorId: String
  postOwnerId: String
  postId: String
  updatedAt: DateTime
}

extend type Query {
  comments: [Comment]!
  postComments (postId: String!): [Comment]!
  comment(id: String!): Comment
}

type Mutation {
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(id: String!, updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
  likeComment(commentId:String!):Boolean
  unlikeComment(commentId:String!):Boolean
}
